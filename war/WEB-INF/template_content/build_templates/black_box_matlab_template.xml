<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: auto-generated file. -->
<project basedir="." default="build" name="assessment">
	<property name='binDir' value='bin'/>
	<property name='sandboxUser' value='pastasandbox'/>
	${bbTestCaseProperties}
	
	<target name="makeBin">
		<mkdir dir="${binDir}"/>
		<chgrp file="${binDir}" group="${sandboxUser}" type="dir" />
		<chmod file="${binDir}" perm="g+ws" type="dir" />
		<mkdir dir="${binDir}/${bbuseroutfile}"/>
		<mkdir dir="${binDir}/${bbmetafile}"/>
	</target>
	<target name="makeWritable">
		{$?{hasWritable}
		<chgrp group="${sandboxUser}" type="file">
			<fileset dir="${binDir}">
				${writableFiles}
			</fileset>
		</chgrp>
		<chmod perm="g+w" type="file">
			<fileset dir="${binDir}">
				${writableFiles}
			</fileset>
		</chmod>
		}
	</target>
	<target name="copyNonMatlab">
		<echo message="Copying non-code from '${basedir}' to '${binDir}'"/>
		<copy includeemptydirs="false" todir="${binDir}">
			<fileset dir="${basedir}">
				<exclude name="**/*.m"/>
				<exclude name="**/*.java"/>
				<exclude name="build.xml"/>
				<exclude name="${binDir}/**/*"/>
			</fileset>
		</copy>
	</target>
	<target name="moveToBin">
		<echo message="Moving code from '${basedir}' to '${binDir}'"/>
		<move includeemptydirs="false" todir="${binDir}">
			<fileset dir="${basedir}">
				<include name="**/*.m"/>
			</fileset>
		</move>
	</target>

	<target name="init">
		<property environment="env"/>
		<property name="debuglevel" value="source,lines,vars"/>
		<property name="target" value="1.8"/>
		<property name="source" value="1.8"/>
		<path id="lib.jars">
			<fileset dir="${libdirectory}">
				<exclude name="ant-contrib/**"/>
				<include name="**/*.jar"/>
				<include name="**/*.class"/>
			</fileset>
		</path>
		<path id="assessment.classpath">
			<pathelement location="${binDir}"/>
			<path refid="lib.jars"/>
		</path>
		<taskdef resource="net/sf/antcontrib/antcontrib.properties">
			<classpath>
				<pathelement location="${libdirectory}/ant-contrib/ant-contrib-1.0b3.jar"/>
			</classpath>
		</taskdef>
	</target>

	<target name="setup" depends="makeBin, copyNonMatlab, makeWritable, moveToBin">
	</target>
	<target name="clean">
		<echo message="Deleting .class files from '${binDir}'"/>
		<delete>
			<fileset dir="${binDir}" includes="**/*.class"/>
		</delete>
	</target>
	<target name="build" depends="init, setup">
		<echo message="Using mcc to compile MATLAB code"/>
		<exec
    		executable="${mccPath}"
			dir="${binDir}"
			error="${outDirectory}/compile.errors"
    		failonerror="true"
			append="true"
    		resultproperty="compileDone">
			<arg line="-m -o ${solutionName} -R -nodisplay -R -nojvm ${solutionName}" />
			<env key="MCR_CACHE_ROOT" value="/home/${sandboxUser}"/>
		</exec>
		<chmod perm="g+rx">
			<fileset file="${binDir}/${solutionName}" />
			<fileset file="${binDir}/run_${solutionName}.sh" />
		</chmod>
		<delete>
			<fileset file="${binDir}/mccExcludedFiles.log" />
			<fileset file="${binDir}/requiredMCRProducts.txt" />
			<fileset file="${binDir}/readme.txt" />
		</delete>

		<echo message="Using javac to compile Java code"/>
		<record name="${outDirectory}/compile.errors" loglevel="warn" action="start"/>
		<javac
            fork="yes"
            includeantruntime="false"
            debug="true"
            debuglevel="${debuglevel}"
        	srcdir="${basedir}"
            destdir="${binDir}"
            source="${source}"
            target="${target}">
			<exclude name="origSubmission/**/*"/>
			<exclude name="${binDir}/**/*"/>
			<classpath refid="assessment.classpath"/>
		</javac>
		<record name="${outDirectory}/compile.errors" action="stop"/>
	</target>

	<target name="run" depends="init">
		<echo message="Executing '${testName}'"/>
		<foreach param="bbTestIndex" list="${bbTestIndices}" target="doTest"/>
	</target>
	<target name="doTest">
		<script language="javascript">
			<![CDATA[
        	index = project.getProperty('bbTestIndex');
        	project.setProperty('bbTestName', project.getProperty('bbTestName' + index));
        	project.setProperty('bbTestTimeout', project.getProperty('bbTestTimeout' + index));
        	project.setProperty('bbTestTimeoutFraction', project.getProperty('bbTestTimeoutSeconds' + index));
        	project.setProperty('bbTestCommandLine', project.getProperty('bbTestCommandLine' + index));
        ]]>
		</script>
		<echo message="Test Name: ${bbTestName}"/>
		<echo message="Test Timeout: ${bbTestTimeout}"/>
		<echo message="Test Command Line Arguments: ${bbTestCommandLine}"/>
		<echo message="Running ./run_${solutionName}.sh ${matlabInstall} ${bbTestCommandLine}"/>
		<exec
    		executable="${timePath}"
			dir="${binDir}"
			input="${binDir}/${bbinputfile}/${bbTestName}"
            output="${binDir}/${bbuseroutfile}/${bbTestName}"
			error="${outDirectory}/${runErrorsFile}"
			resultproperty="errorCode"
			append="true">
			<arg line='-o ${bbmetafile}/${bbTestName} -f "real %e\nuser %U\nsys %S\nmemory %M\nexit %x"' />
			<arg value="${binDirectory}/matlabpastarun" />
			<arg value="${matlabInstall}" />
			<arg line="${timeoutPath} ${bbTestTimeoutFraction}" />
			<arg line='./run_${solutionName}.sh ${matlabInstall} ${bbTestCommandLine}' />
			<env key="MCR_CACHE_ROOT" value="/home/${sandboxUser}"/>
		</exec>
		<script language="javascript">
			<![CDATA[
    		var errorCode = parseInt(project.getProperty('errorCode'));
			// 124 = timeout, 143 = SIGTERM
    		if(errorCode == 124 || errorCode == 143) {
    			project.setProperty('timedOut', true);
			}
    	]]>
		</script>
		<if>
			<isset property="timedOut"/>
			<then>
				<touch file="${binDir}/${bbmetafile}/${bbTestName}.timedout"/>
			</then>
		</if>
		<loadfile srcfile="${binDir}/${bbuseroutfile}/${bbTestName}" property="trimmedOutput">
			<filterchain>
				<headfilter lines="-1" skip="4"/>
			</filterchain>
		</loadfile>
		<if><isset property="trimmedOutput"/><then>
			<echo message="${trimmedOutput}" file="${binDir}/${bbuseroutfile}/${bbTestName}" append="false" />
		</then><else>
			<delete file="${binDir}/${bbuseroutfile}/${bbTestName}"/>
			<touch file="${binDir}/${bbuseroutfile}/${bbTestName}"/>
		</else></if>
		
	</target>

	<target name="test" depends="init">
		<echo message="Running JUnit '${testName}'"/>
		<junit
            filtertrace="${filterStackTraces}"
            fork="yes"
            timeout="${maxtimeallowed}"
            dir="${binDir}">
			<formatter type="xml" />
			<test name="${testName}" outfile="${testOutputFile}" />
			<classpath refid="assessment.classpath"/>
		</junit>
		<exec executable="mv" dir="${basedir}">
			<arg value="${testOutputFile}.xml"/>
			<arg value="${outDirectory}/"/>
		</exec>
	</target>
</project>
